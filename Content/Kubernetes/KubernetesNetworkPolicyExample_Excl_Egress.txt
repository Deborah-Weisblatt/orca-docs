# Policy generated by Tufin SecureCloud
# Account: generic-bank
# Cluster: retail
# 
# Notes:
#
# 1. To apply the policies run:
# kubectl apply -f generic-bank-retail.yaml
#
# 2. Namespaces should have unique labels
# The auto-generated policies rely on namespace labels to allow inter-namespace access.
# Run the following command to add labels to all namespaces:                                    
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl label namespace $ns namespace=$ns --overwrite; done
#
# 3. To delete Tufin SecureCloud policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol -l tufin-owner=tufin-orca -l tufin-mode=auto-generated --namespace=$ns; done
#
# 4. To delete ALL network policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol --all --namespace=$ns; done
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: kube-system.kube-dns
    namespace: kube-system
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    k8s-app: heapster
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: default
            podSelector:
                matchLabels:
                    app: indexer
      - from:
          - namespaceSelector:
                matchLabels:
                    name: tufin-system
            podSelector:
                matchLabels:
                    app: kite
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: default
            podSelector:
                matchLabels:
                    app: time
      - from:
          - namespaceSelector: {}
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: default
            podSelector:
                matchLabels:
                    app: admin
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: default
            podSelector:
                matchLabels:
                    app: customer
    podSelector:
        matchLabels:
            k8s-app: kube-dns
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.admin
    namespace: default
spec:

    ingress:
      - from:
          - ipBlock:
                cidr: 0.0.0.0/0 # ingress
    podSelector:
        matchLabels:
            app: admin
    policyTypes:
      - Ingress
 ---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.customer
    namespace: default
spec:
    ingress:
      - from:
          - ipBlock:
                cidr: 0.0.0.0/0 # ingress
    podSelector:
        matchLabels:
            app: customer
    policyTypes:
      - Ingress
  ---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: kube-system.default-http-backend
    namespace: kube-system
spec:
    ingress:
      - from:
          - ipBlock:
                cidr: 0.0.0.0/0 # ingress
    podSelector:
        matchLabels:
            k8s-app: glbc
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: tufin-system.kite
    namespace: tufin-system
spec:
    ingress:
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector:
        matchLabels:
            app: kite
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: data.postgres
    namespace: data
spec:
    ingress:
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: default
            podSelector:
                matchLabels:
                    app: admin
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: default
            podSelector:
                matchLabels:
                    app: indexer
    podSelector:
        matchLabels:
            app: postgres
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.redis
    namespace: default
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: customer
      - from:
          - podSelector:
                matchLabels:
                    app: indexer
    podSelector:
        matchLabels:
            app: redis
    policyTypes:
      - Ingress
  ---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.indexer
    namespace: default
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: redis
    podSelector:
        matchLabels:
            app: indexer
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2019-08-28T15:18:19Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.time
    namespace: default
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: admin
    podSelector:
        matchLabels:
            app: time
    policyTypes:
      - Ingress
 ---

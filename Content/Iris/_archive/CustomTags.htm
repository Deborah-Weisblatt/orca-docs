<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Custom Tags</h1>
        <p>
            <img src="../../Iris-images/TagManager.png" class="ThumbnailPopup" /> </p>
        <MadCap:snippetBlock src="../../Iris/WhatIsCustomTags.flsnp" />
        <p>Tags are used to aggregate assets into  monitored applications. For more information on how tags are used to define your applications, see <a href="../../Iris/Global_View.htm">Global Application View</a>. Custom tags are treated by <MadCap:variable name="local-iris.ProductName" /> just like any other vendor-provided asset tag, </p>
        <p>Custom tags are calculated values, based on a <a href="../../Iris/Regex.htm">regex condition</a> matching an <a href="../../Iris/AssetProperties.htm">asset property</a>. Therefore, a defined custom tag may change following any changes in the asset property on which it is based.</p>
        <p class="h2"><a name="Matching"></a>Matching Properties of your Assets Using Regex</p>
        <p>Before defining a custom tag you must know which asset property you want to base it on. Having chosen a property you next define how to identify it using a regular expression (regex). If you want to extract a substring from the matched value to place into your custom tag name, you can break up your regex expression into several. You can use any number of regex expressions to construct your match string; each must be placed within parentheses. Only if the entire construct matches the value of the selected property, will the tag be assigned to the asset.  Here are some examples:</p>
        <ul>
            <li>
                <p>(^Sys-.*) - only if the property value starts with <span class="StatusOrValue">Sys-</span>. The entire property value will be available in parameter name $1, which you can use in you tag name.</p>
            </li>
            <li>
                <p>(^Sys-)(.* ) - only if the property value starts with <span class="StatusOrValue">Sys-</span>. Additionally extract the text that follows <span class="StatusOrValue">Sys-. </span>The property value will be available in two parameters, one named $1 containing Sys- and the other named $2 containing the rest of the string. You can use these to construct your tag name as you wish.</p>
            </li>
        </ul>
        <p class="h2"><a name="Custom"></a>Custom Tag Format</p>
        <p>Like asset tags, custom tags follow the format key:value. When specifying your tag name you can use any combination of variables and constants to construct the final tag combination. The subject of variables is explained above in <a href="#Matching">Matching Properties of your Assets Using Regex</a>. Here are some examples: </p>
        <ul>
            <li>
                <p>MyTagKey:MyTagValue - Both key and value are constants specified by you</p>
            </li>
            <li>
                <p>$1:MyTagValue - The key will be constructed from the first regex expression, the value will be a constant</p>
            </li>
            <li>
                <p>MyTagValue:$1 - The value will be constructed from the first regex expression, the key will be a constant</p>
            </li>
            <li>
                <p>$2:MyTagValue - The key will be constructed from the second regex expression, the value will be a constant</p>
            </li>
            <li>
                <p>$1:$2 - The key  will be constructed from the first regex expression and the value will be constructed from the second regex expression</p>
            </li>
            <li>
                <p>$1-Device:$4: The key  will be constructed from the first regex expression concatenated with the constant <span class="StatusOrValue">-Device</span> and the value will be constructed from the second regex expression.</p>
            </li>
        </ul>
        <p>See also <a href="../../Iris/WorkingWithTagManager.htm">Working With Tag Manager</a></p>
    </body>
</html>
<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Deploying <MadCap:variable name="local.Product_S" /> </h1>
        <p>These guidelines are for deploying <MadCap:variable name="Local.Product_S" /> on your first cluster, according to the instructions in <a href="SignUp.htm">Sign Up</a>. First make sure you understand the <a href="#Deployme">Deployment Requirements</a>.</p>
        <p class="h2"><a name="Deploy"></a>On <MadCap:variable name="Local.GKE" />, <MadCap:variable name="Local.AKS" />, <MadCap:variable name="Local.EKS" />, <MadCap:variable name="Local.Docker" /> and <MadCap:variable name="local.pks" /> Clusters</p>
        <ol>
            <li>Open a terminal and point kubectl to your Kubernetes cluster.</li>
            <li>
                <p>As cluster admin, run the bash command string  given to you in the signup process </p><pre xml:space="preserve">bash &lt;(curl -s -H "Authorization: Bearer <span class="Bold">&lt;deploy_token&gt;</span>"
https://orca.tufin.io/api/<span class="Bold">&lt;domain&gt;/&lt;project&gt;</span>/scripts/deploy-orca)</pre>
                <p>where,</p>
                <ul>
                    <li>&lt;domain&gt; is a unique organization ID - contains your email domain</li>
                    <li>&lt;project&gt; is as provided by you when signing up</li>
                    <li>&lt;deploy_token&gt; is an authentication token that will allow your cluster to communicate with <MadCap:variable name="local.Product_S" /></li>
                </ul>
                <p>The command string will be displayed when logging in until you run the command and appears also in the  email, if requested. </p>
            </li>
        </ol>
        <p class="h2">On <MadCap:variable name="Local.Openshift" /> Clusters</p>
        <p>Use the <MadCap:variable name="Local.Product_S" /> <MadCap:variable name="Local.Openshift" /> operator as documented on <a href="https://github.com/Tufin/orca-operator/blob/master/README.md">https://github.com/Tufin/orca-operator/blob/master/README.md</a>. Alternatively, you can install using the command line as described for <MadCap:variable name="Local.GKE" />, <MadCap:variable name="Local.AKS" />, <MadCap:variable name="Local.EKS" />, <MadCap:variable name="Local.Docker" /> and <MadCap:variable name="local.pks" />.</p>
        <p class="h2">Now What?</p>
        <p><MadCap:variable name="local.Product_L" /> has now been deployed on your cluster and your cluster is now being monitored. Check as follows:</p>
        <p>
            <ol>
                <li>Log in to <MadCap:variable name="local.Product_S" />. </li>
                <li>Go to Services. If services appear, you're all set! If not, there may be a connectivity issue between your cluster and <MadCap:variable name="local.Product_S" /> - verify that all the ports listed in <a href="#outbound">Outbound Connections </a>are allowed. The service graph will show traffic as soon as it is generated in the cluster.</li>
                <li>Continue with <a href="UsingOrca.htm">Using <MadCap:variable name="local.Product_S" /></a>.</li>
            </ol>
        </p>
        <p class="h2"><a name="Deployme"></a>Deployment Requirements</p>
        <p class="h3">Supported Kubernetes Versions
</p>
        <ul>
            <li>
                <p>Any standard Kubernetes platform, version 1.9 and newer.
</p>
            </li>
            <li>
                <p><MadCap:variable name="Local.GKE" />, <MadCap:variable name="Local.AKS" />, <MadCap:variable name="Local.EKS" />, <MadCap:variable name="Local.Openshift" /> and <MadCap:variable name="Local.Docker" /> are fully supported.
</p>
            </li>
            <li>
                <p>Additional Kubernetes platforms can be supported on-demand.
</p>
            </li>
        </ul>
        <div class="Warning">Installation  changes the Kubernetes DNS pod to listen on port 54 instead of the default port 53</div>
        <p class="h3">Update Your Kubernetes Network Policy</p>
        <p>If you use Kubernetes network policies to restrict access to the Kubernetes DNS pod (default port 53), you must change this restriction to port 54. This applies to all Kubernetes platforms except <MadCap:variable name="Local.Openshift" />.
</p>
        <p class="h3"><a name="outbound"></a>Outbound Connections</p>
        <p>
If you have a firewall between your Kubernetes cluster and the internet, allow the following connections:</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <thead>
                <tr class="TableStyle-PatternedRows-Head-Header1">
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Endpoint</th>
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Port</th>
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Protocols</th>
                    <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Security</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">guru.tufin.io</td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">443</td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">HTTP/2</td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">TLS</td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkRows">registry.tufin.io</td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkRows">443</td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkRows">HTTP 1.1</td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-DarkRows">TLS</td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">loginregistry.tufin.io</td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">443</td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">HTTP 1.1</td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">TLS</td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkRows">
                    <td class="TableStyle-PatternedRows-BodyB-Regular-DarkRows">orca.tufin.io</td>
                    <td class="TableStyle-PatternedRows-BodyB-Regular-DarkRows">443</td>
                    <td class="TableStyle-PatternedRows-BodyB-Regular-DarkRows">HTTP 1.1</td>
                    <td class="TableStyle-PatternedRows-BodyA-Regular-DarkRows">TLS</td>
                </tr>
            </tbody>
        </table>
        <p class="h3">Installation Requires 'cluster-admin' Role</p>
        <p>The deployment bash string must be run as Kubernetes cluster administrator. This requires creating a cluster role binding using the Kubernetes command line as shown below:</p>
        <p><pre>kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user &lt;user&gt;</pre>
        </p>
        <p>where &lt;user&gt; is dependent on your Kubernetes environment. Below are some examples:</p>
        <ul>
            <li><MadCap:variable name="Local.GKE" /> (Google): <pre> --user $(gcloud config get-value account)</pre></li>
            <li><MadCap:variable name="Local.EKS" />: (Amazon): <pre> --user $(aws sts get-caller-identity --query 'Arn' --output text)</pre></li>
            <li><MadCap:variable name="Local.AKS" />: (Microsoft): <pre> --user  $(az account show --query user.name -o tsv)</pre></li>
            <li><MadCap:variable name="Local.Openshift" />: <pre> --user $(oc whoami)</pre></li>
        </ul>
        <p class="h3">Connecting to Your Kubernetes Cluster</p>
        <p>If you don't know how to connect to your Kubernetes Cluster, see:</p>
        <ul>
            <li><MadCap:variable name="Local.GKE" /> (Google): <a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-access-for-kubectl">https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-access-for-kubectl</a></li>
            <li><MadCap:variable name="Local.EKS" />: (Amazon) <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html</a></li>
            <li><MadCap:variable name="Local.AKS" />: (Microsoft) <a href="https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough">https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough</a></li>
            <li><MadCap:variable name="Local.Openshift" />: <a href="https://docs.openshift.com/dedicated/getting_started/dedicated_administrators.html">https://docs.openshift.com/dedicated/getting_started/dedicated_administrators.html</a></li>
            <li><MadCap:variable name="Local.Docker" />: <a href="https://docs.docker.com/ee/ucp/user-access/cli/">https://docs.docker.com/ee/ucp/user-access/cli/</a></li>
            <li><MadCap:variable name="local.pks" />: <a href="https://docs.pivotal.io/pks/1-3/control-plane.html">https://docs.pivotal.io/pks/1-3/control-plane.html</a> </li>
        </ul>
        <div class="NoteLight">
            <h2><a name="Changes"></a>Changes in your Cluster</h2>
            <p>Deployment makes changes to your Kubernetes cluster:</p>
            <ol>
                <li>Creates a new directory called <span class="Code">bash-kite-installer</span> in your current working directory. Retain the name of the directory in which you run the  installation script, because it will be needed if you want to <a href="RemovingOrca.htm">remove Orca from a cluster</a>.</li>
                <li>Changes the Kubernetes DNS pod to listen on port 54 instead of the default port 53 (except <MadCap:variable name="Local.Openshift" />). </li>
                <li>Injects the Orca DNS plugin container to the KubeDNS pod (except <MadCap:variable name="Local.Openshift" />)</li>
                <li>Adds a CRD for <MadCap:variable name="Local.Product_S" /> policies.</li>
            </ol>
        </div>
    </body>
</html>
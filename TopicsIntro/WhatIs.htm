<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>What is Tufin Orca?</h1>
        <p><MadCap:variable name="local.Product_L" /> is a security automation service for containers and microservices that gives you visibility and policy management for your Kubernetes clusters. <MadCap:variable name="local.Product_L" /> can also be integrated into your CI/CD pipeline, letting you enable automated security controls directly from your source of deployment.</p>
        <p><MadCap:variable name="local.Product_L" /> monitors the services in your Kubernetes cluster and learns their connectivity patters, which <MadCap:variable name="local.Product_L" /> can enforce via a whitelist policy. <MadCap:variable name="local.Product_L" /> also computes a <MadCap:variable name="local.TufinScore" /> for each active service, based on a vulnerability scan of the underlying containers. The <MadCap:variable name="local.TufinScore" /> gives you instant insight into the security of the services you utilize in your application.</p>
        <p>Orca integrates directly into your CI/CD pipeline, ensuring that your Docker images meet the security standards you specify. Simply add a step to your build pipeline to scan the Docker image using <MadCap:variable name="local.Product_L" />. <MadCap:variable name="local.Product_L" /> scans  the image for vulnerabilities and returns the findings and a <MadCap:variable name="local.TufinScore" /> as json.</p>
        <p><MadCap:variable name="local.Product_L" /> can add a badge into your code repository, which will display the security level of the Docker image. The Tufin badges are an effective way to highlight security issues to the application developers as they develop the application.</p>
        <p>Orca integrates into any Kubernetes platform, any build server, and any code repository. Your application can be deployed on any public cloud platform that supports Kubernetes, including AWS, Azure, GCP, OpenShift, Docker Enterprise, Minikube, or on your own private on-premises cloud platform.</p>
    </body>
</html>